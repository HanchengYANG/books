&item1=abstract #A Java keyword used in a class definition to specify that a class is not to be instantiated, but rather inherited by other classes.&

&item2=abstract class  #A class that contains one or more abstract methods, and therefore can never be instantiated. Abstract classes are defined so that other classes can subclass them and make them concrete by implementing the abstract methods.&

&item3=abstract Modifier  #Abstract modifier can be used with classes and methods. This keyword when used with a class indicates that the class cannot be instantiated and when used with methods indicates that the method is abstract.&

&item4=Access Specifier  #Access specifiers or modifiers are used to control the access of classes and class members&

&item5=Anonymous Class #An anonymous class does not have a name. It is a type of local class. However, an anonymous class cannot implement an interface.&

&item6=API #Acronym for Application Programming Interface.&

&item7=Arithmetic Operators #These operators are provided to facilitate arithmetic functions like addition, subtraction, multiplication and so on.&

&item8=Array #An array is a structure to store one or more items belonging to a single data type. Arrays are fixed in size.&

&item9=Assertion #An assertion allows testing the correctness of any assumptions that have been made about the program.&

&item10=Assignment Operator #This operator assigns value to a variable.&

&item11=Associativity of Operators #Refers to assigning priority or precedence to operators having same precedence level.&

&item12=binary operator #An operator that has two arguments.&

&item13=break #The break statement is used in a loop to immediately terminate the loop.&

&item14=boolean  #The Java programming language provides the boolean data type and the literal values true and false. &

&item15=bytecode  #Machine-independent code generated by the Java compiler and executed by the Java interpreter.&

&item16=catch block  #The catch block, as the name suggests, catches the exceptions thrown in the try block.  Without the try block, no catch block can exist.  We can have multiple catch blocks handling different types of exceptions.&

&item17=Class  #In the Java programming language, a type that defines the implementation of a particular kind of object. &

&item18=Classpath  #A Classpath is a list of directories, which the compiler and the interpreter use, to search for the respective class file(s). &

&item19=Class variable  #A data item associated with a particular class as a whole--not with particular instances of the class. Class variables are defined in class definitions. Also called a static field. See also instance variable.&

&item20=Comment #Comments are statements written by the programmer for future reference. Comments are ignored by the compiler.&

&item21=Control-flow Invariant #A control-flow invariant is an assumption that one cannot execute some statement in certain area of code, that is, some part of the code is unreachable.&

&item22=continue #A Java keyword used to resume program execution at the end of the current loop. If followed by a label, continue resumes execution where the label occurs.&

&item23=Data Type #Data types determine the type of values that can be stored in a variable and the operations that can be performed on them.&

&item24=default Keyword #The keyword default in a switch statement, indicates that if none of the case values is matching with the result of the condition given in the switch expression, then statement(s) in the default case block will be executed.&

&item25=do #A Java keyword used to declare a do-while loop that will iterate a block of statements. The loop's exit condition can be specified with the while keyword.&

&item26=Escape Sequence #An escape sequence is a special sequence of characters that is used to represent characters, which cannot be entered directly into a string.&

&item27=Exception #An exception is termed as a special type of error. Whenever an error is encountered while executing a program, an exception is said to have occurred. It arises at run time in a code sequence, mostly, due to abnormal conditions that occur at the time of running the program.&

&item28=Exception Handler #A block of code that reacts to a specific type of exception. If the exception is for an error that the program can recover from, the program can resume executing after the exception handler has executed.&

&item29=extends Keyword #In Java, extends keyword is used to inherit a class.&

&item30=Field #A data member of a class.&

&item31=final Modifier #The modifier final is added to a class when its specification is frozen. The final modifier is used with variables, methods and classes. Final variables cannot be reassigned a value, final methods cannot be overridden and final classes cannot be subclassed.&

&item32=finally block #Exceptions can cause control to leave the current method without completing the method’s execution. If there is a cleanup code such as the code required to close files at the end of the method, it will never get called. To deal with this, Java provides the finally block.&

&item33=Format Specifier #Format specifiers can be used to format the output displayed on the screen.&

&item34=implements #A Java keyword included in the class declaration to specify any interfaces that are implemented by the current class.&

&item35=import #A Java keyword used at the beginning of a source file that can specify classes or entire packages to be referred to later without including their package names in the reference.&

&item36=Inheritance #The ability of one class to inherit the members of another class is called inheritance.&

&item37=Initializer #Initializers are small pieces of code embedded in curly braces that perform initialization.&

&item38=Instance variable #Any item of data that is associated with a particular object. Each instance of a class has its own copy of the instance variables defined in the class. Also called a field. See also class variable.&

&item39=interface #A Java keyword used to define a collection of method definitions and constant values. It can later be implemented by classes that define this interface with the "implements" keyword.&

&item40=java.lang package #This package contains classes that forms the basis for core classes of Java language.&

&item41=java.util package #This package contains classes and interfaces that provide additional utility.&

&item42=javac #This is the command used to compile a java program.&

&item43=javadoc tags #These tags allow us to include reference information in the source code.&

&item44=javadoc tool #This tool provided in JDK helps to document the classes in a package and the methods of the classes.&

&item45=JVM #Java Virtual machine is a software concept based on the idea of an imaginary computer, which has a logical set of instructions, and these instructions define the operations of this computer. JVM provides the runtime environment for Java programs to work.&

&item46=Local Class #A local class is declared within a method, constructor or an initializer. In other words, a local class is declared within a block of code and is visible only within that particular block.&

&item47=Member Class #A member class is a non-static inner class and is declared as a member of an outer or an enclosing class.&

&item48=Method #In Java, a function declared as a member of a class is called a method.&

&item49=Method Overloading #Method overloading is the ability of a class to define several methods with the same name.&

&item50=Method Overriding #When a subclass defines a new method having the same signature as the superclass method, then the process is called overriding.&

&item51=Multiple Inheritance #In multiple inheritance, classes can inherit methods and properties from several different classes. Java does not support multiple inheritance.&

&item52=native modifier #The modifier, native, can be used only with methods. The native keyword indicates that the body of the method will be provided elsewhere that is outside Java Virtual Machine.  So native code is written in a language other than Java and is compiled for the native machine.&

&item53=Nested Class #A nested class is a class defined within another class. It has access to members of the outer or enclosing class even if the members are declared private.&

&item54=new Keyword #In Java, the operator new is used to create object because it assigns memory space to store the object of the given type.&

&item55=Object #The principal building blocks of object-oriented programs. Each object is a programming unit consisting of state (variables) and behavior (methods).&

&item56=Operator #Operators are symbols that help to manipulate or perform some sort of function on data.&

&item57=Packages #In Java, to reuse the already existing code, we make use of packages. A package is a collection of classes, interfaces and/or other packages.  &

&item58=PATH #The PATH variable is set to point to the location of executables such as javac.exe, java.exe and program files.&

&item59=private #A Java keyword used in a method or variable declaration. It signifies that the method or variable can only be accessed by the members of the class.&

&item60=protected #A Java keyword used in a method or variable declaration. It signifies that the method or variable can only be accessed by members of the class, subclasses, or classes in the same package.&

&item61=public #A Java keyword used in a class, method or variable declaration. It signifies that the class, method or variable can be accessed by any class.&

&item62=Scanner Class #The Scanner class allows the user to read values of various types.&

&item63=static Keyword #A Java keyword used to define a member to be accessible without an instance. In other words member declared as static can be used directly using the class name; there is no need to create an instance to access them.&

&item64=StringBuilder Class #The StringBuilder class provides various methods to manipulate a string object. Objects of StringBuilder class are growable and flexible.&

&item65=StringTokenizer Class #The StringTokenizer class in Java is used to split a string into tokens according to a delimiter character.&

&item66=subclass #A class that is derived from a particular class, perhaps with one or more classes in between.&

&item67=superclass #A class from which a particular class is derived, perhaps with one or more classes in between.&

&item68=super Keyword #Java keyword used to access members of a super class.&

&item69=this Keyword #A Java keyword that can be used to represent an instance of the class. this keyword can be used to access instance variables and instance methods.&

&item70=transient Modifier #The transient modifier is used to declare fields that are not saved or restored as a part of the state of the object.&

&item71=throw keyword #In Java, when an error condition arises in a program, we send an exception up the call chain by using the throw keyword.&

&item72=throws keyword #A Java keyword used in method declarations that specify which exceptions are not handled within the method but rather passed to the next higher level of the program.&

&item73=try block #The try block consists of a set of executable statements that can possibly throw exception while executing them. A method, which may throw an exception, can also be included in the try block. A try{} block has to be followed by one or more catch blocks where exception thrown in the try block is caught.&

&item74=Type Cast #Explicit conversion from one data type to another.&

&item75=Variable #Variable stores the values required in the program. Variables should be declared before they are used.&

&item76=volatile Modifier #This modifier is used only with variables and it indicates that the value of the variable may be changed.&














&num_items=84&

&itemsfile_loaded=1&





